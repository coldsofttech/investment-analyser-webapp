name: Deploy to GitHub Pages

on:
 push:
  branches:
   - main
   - test

permissions:
 contents: write
 pages: write

jobs:
 build-and-deploy:
  runs-on: ubuntu-latest
  env:
   TARGET_REPO: ${{ github.ref_name == 'main' && 'coldsofttech/investment-analyser' || 'coldsofttech/investment-analyser-test' }}
   TARGET_BRANCH: gh-pages
   TARGET_PAT: ${{ secrets.TARGET_REPO_PAT_TEST }}
   CONFIG_REPO: coldsofttech/investment-analyser-config
   BRANCH_NAME: ${{ github.ref_name }}
  steps:
   - name: Checkout
     uses: actions/checkout@v3

   - name: Install Dependencies
     run: |
      sudo apt-get install jq
      sudo apt-get install unzip

   - name: Fetch Auth0 Config
     run: |
      echo "Getting latest successful workflow run from ${CONFIG_REPO} on branch ${BRANCH_NAME}..."
      api_url="https://api.github.com/repos/${CONFIG_REPO}/actions/runs?branch=${BRANCH_NAME}&status=success&per_page=1"
      run_id=$(curl -s -H "Authorization: token ${{ env.TARGET_PAT }}" $api_url | jq -r '.workflow_runs[0].id')

      if [ "$run_id" == "null" ]; then
       echo "‚ùå No successful workflow run found on branch ${BRANCH_NAME} in ${CONFIG_REPO}"
       exit 1
      fi

      echo "Found workflow run ID: $run_id"
      echo "Downloading artifacts..."
      mkdir -p config-artifacts
      curl -L -H "Authorization: token ${{ env.TARGET_PAT }}" \
        -o config-artifacts/artifact.zip \
        https://api.github.com/repos/${CONFIG_REPO}/actions/runs/${run_id}/artifacts | jq -r '.artifacts[0].archive_download_url' | xargs -I{} curl -L -H "Authorization: token ${{ env.TARGET_PAT }}" -o config-artifacts/artifact.zip "{}"
    
      echo "Unzipping..."
      unzip config-artifacts/artifact.zip -d config-artifacts
      echo "Moving auth0-config.json to docs/static/js"
      mv config-artifacts/auth0-config.${{ env.BRANCH_NAME }}.json docs/static/js/
    
   - name: Bypass Jekyll Processing
     run: |
      touch docs/.nojekyll

   - name: Deploy to GitHub Pages
     uses: peaceiris/actions-gh-pages@v4
     with:
      external_repository: ${{ env.TARGET_REPO }}
      personal_token: ${{ env.TARGET_PAT }}
      publish_dir: docs
      publish_branch: ${{ env.TARGET_BRANCH }}